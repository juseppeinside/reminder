const cron = require("node-cron");
const { getCurrentMoscowTime, getWeekNumber } = require("../utils/datetime");
const reminderModel = require("../models/reminders");

function setupReminderScheduler(bot) {
  // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
  cron.schedule("* * * * *", async () => {
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è
      const moscowTime = getCurrentMoscowTime();
      const currentHour = moscowTime.getHours();
      const currentMinute = moscowTime.getMinutes();
      const timeString = `${currentHour
        .toString()
        .padStart(2, "0")}:${currentMinute.toString().padStart(2, "0")}`;

      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
      const daysMap = {
        0: "–≤—Å",
        1: "–ø–Ω",
        2: "–≤—Ç",
        3: "—Å—Ä",
        4: "—á—Ç",
        5: "–ø—Ç",
        6: "—Å–±",
      };
      const currentDay = daysMap[moscowTime.getDay()];

      // –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏ –≤ –≥–æ–¥—É
      const weekNumber = getWeekNumber(moscowTime);

      // –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      const reminders = await reminderModel.getAllReminders();

      for (const reminder of reminders) {
        try {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –æ–¥–Ω–æ–º—É –∏–∑ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω
          const reminderTimes = reminder.time.split(",");
          if (!reminderTimes.includes(timeString)) {
            continue;
          }

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ–ª–∂–Ω–æ –ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è
          const reminderDays = reminder.days.split(",");
          if (!reminderDays.includes(currentDay)) {
            continue;
          }

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –Ω–µ–¥–µ–ª—å
          if (
            reminder.every_week > 0 &&
            weekNumber % (parseInt(reminder.every_week) + 1) !== 0
          ) {
            continue;
          }

          // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
          let messageText = reminder.text;

          // –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
          if (
            messageText.toLowerCase().includes("–∑–≤–æ–Ω–æ–∫") ||
            messageText.toLowerCase().includes("–∑–≤–æ–Ω–∏—Ç—å") ||
            messageText.toLowerCase().includes("–ø–æ–∑–≤–æ–Ω–∏—Ç—å")
          ) {
            messageText = `üìû ${messageText}`;
          } else if (
            messageText.toLowerCase().includes("–≤—Å—Ç—Ä–µ—á–∞") ||
            messageText.toLowerCase().includes("–º–∏—Ç–∏–Ω–≥") ||
            messageText.toLowerCase().includes("—Å–æ–±—Ä–∞–Ω–∏–µ")
          ) {
            messageText = `üë• ${messageText}`;
          } else if (
            messageText.toLowerCase().includes("–ª–µ–∫–∞—Ä—Å—Ç–≤") ||
            messageText.toLowerCase().includes("—Ç–∞–±–ª–µ—Ç–∫") ||
            messageText.toLowerCase().includes("–ø—Ä–∏–Ω—è—Ç—å")
          ) {
            messageText = `üíä ${messageText}`;
          } else if (
            messageText.toLowerCase().includes("–∫—É–ø–∏—Ç—å") ||
            messageText.toLowerCase().includes("–∑–∞–∫–∞–∑–∞—Ç—å") ||
            messageText.toLowerCase().includes("–æ–ø–ª–∞—Ç–∏—Ç—å")
          ) {
            messageText = `üõí ${messageText}`;
          } else if (
            messageText.toLowerCase().includes("–¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è") ||
            messageText.toLowerCase().includes("–ø—Ä–∞–∑–¥–Ω–∏–∫")
          ) {
            messageText = `üéÇ ${messageText}`;
          } else if (
            messageText.toLowerCase().includes("–ø–æ–µ—Å—Ç—å") ||
            messageText.toLowerCase().includes("–µ–¥–∞") ||
            messageText.toLowerCase().includes("–ø–æ–∫—É—à–∞—Ç—å") ||
            messageText.toLowerCase().includes("–æ–±–µ–¥")
          ) {
            messageText = `üçΩÔ∏è ${messageText}`;
          } else {
            // –ï—Å–ª–∏ –Ω–µ –ø–æ–¥–æ—à–ª–æ –Ω–∏ –æ–¥–Ω–æ —É—Å–ª–æ–≤–∏–µ, –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∏–∫–æ–Ω–∫—É –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
            messageText = `‚è∞ ${messageText}`;
          }

          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
          try {
            await bot.sendMessage(reminder.user_id, messageText);
            console.log(
              `–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ ${reminder.id} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${reminder.user_id}`
            );
          } catch (sendError) {
            console.error(
              `–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ${reminder.id} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${reminder.user_id}:`,
              sendError.message
            );
            // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, —á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
            continue;
          }

          // –£–º–µ–Ω—å—à–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–æ–∫
          if (reminder.count_in_days !== 99999) {
            const newCount = reminder.count_in_days - 1;

            if (newCount <= 0) {
              // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–∏–æ–¥ –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
              let periodText = "";
              const everyWeekValue = parseInt(reminder.every_week);

              if (everyWeekValue === 0) {
                periodText = "–∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é";
              } else if (everyWeekValue === 1) {
                periodText = "—á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é";
              } else if (everyWeekValue >= 2) {
                periodText = `–∫–∞–∂–¥—ã–µ ${everyWeekValue + 1} –Ω–µ–¥–µ–ª–∏`;
              }

              // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
              const completionMessage = `\n\n‚ö†Ô∏è *–≠—Ç–æ –±—ã–ª–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–∑ —Å–µ—Ä–∏–∏!*\n`;

              const replyMarkup = {
                inline_keyboard: [
                  [
                    {
                      text: "üìù –°–æ–∑–¥–∞—Ç—å —Ç–∞–∫–æ–µ –∂–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –µ—â–µ –Ω–∞ 1 –æ—Ç–ø—Ä–∞–≤–∫—É?",
                      callback_data: `recreate_${reminder.id}`,
                    },
                  ],
                ],
              };

              // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏
              try {
                await bot.sendMessage(reminder.user_id, completionMessage, {
                  parse_mode: "Markdown",
                  reply_markup: replyMarkup,
                });
              } catch (sendError) {
                console.error(
                  `–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è ${reminder.id}:`,
                  sendError.message
                );
              }

              // –°–æ—Ö—Ä–∞–Ω—è–µ–º —à–∞–±–ª–æ–Ω —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
              const templateId = `template_${reminder.id}`;
              await reminderModel.saveReminderTemplate(
                templateId,
                reminder.user_id,
                reminder.text,
                reminder.time,
                reminder.days,
                reminder.every_week
              );

              // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –æ—Ç–ø—Ä–∞–≤–æ–∫
              await reminderModel.deleteReminder(reminder.id, reminder.user_id);
            } else {
              // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫
              await reminderModel.updateReminderCount(reminder.id, newCount);
            }
          }
        } catch (reminderError) {
          console.error(
            `–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è ${reminder.id}:`,
            reminderError
          );
        }
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π:", error);
    }
  });
}

module.exports = {
  setupReminderScheduler,
};
