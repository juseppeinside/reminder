const config = require("../config");
const userModel = require("../models/users");
const reminderModel = require("../models/reminders");
const { parseReminderParams } = require("../utils/reminder-parser");
const { getWeekPeriodText } = require("../utils/datetime");

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
function handleStart(bot) {
  bot.onText(/\/start/, async (msg) => {
    const chatId = msg.chat.id;
    await userModel.saveUser(msg.from);
    sendHelpMessage(bot, chatId);
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
function handleHelp(bot) {
  bot.onText(/\/help/, (msg) => {
    const chatId = msg.chat.id;
    sendHelpMessage(bot, chatId);
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /manual –¥–ª—è –ø—Ä—è–º–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
function handleManual(bot) {
  bot.onText(/\/manual (.+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    const manualText = match[1];

    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
      if (!manualText.includes("text=") || !manualText.includes("time=")) {
        bot.sendMessage(
          chatId,
          "–û—à–∏–±–∫–∞: –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∫–∞–∫ –º–∏–Ω–∏–º—É–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã text –∏ time"
        );
        return;
      }

      // –ü–µ—Ä–µ–¥–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞–ø—Ä—è–º—É—é, –±–µ–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏
      const params = parseReminderParams(manualText);
      if (params) {
        const reminder = await reminderModel.saveReminder(chatId, params);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏
        bot.sendMessage(chatId, `‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ!`, {
          parse_mode: "Markdown",
        });
      }
    } catch (error) {
      bot.sendMessage(
        chatId,
        `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: ${error.message}`
      );
    }
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /users (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
function handleUsers(bot) {
  bot.onText(/\/users/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id; // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    if (userId.toString() === config.ADMIN_ID.toString()) {
      try {
        // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const userCount = await userModel.getUserCount();

        // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const users = await userModel.getRecentUsers(10);

        let message = `–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${userCount}\n\n`;

        if (users.length > 0) {
          message += "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n";
          users.forEach((user) => {
            message += `ID: ${user.id}, Username: ${
              user.username || "-"
            }, –ò–º—è: ${user.first_name || "-"}\n`;
          });
        } else {
          message += "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç.";
        }

        bot.sendMessage(chatId, message);
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", error);
        bot.sendMessage(chatId, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π");
      }
    } else {
      bot.sendMessage(chatId, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã");
    }
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /notification (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
function handleNotification(bot) {
  bot.onText(/\/notification (.+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id; // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const notificationText = match[1];

    if (userId.toString() === config.ADMIN_ID.toString()) {
      try {
        const users = await userModel.getAllUsers();

        let sentCount = 0;
        for (const user of users) {
          try {
            await bot.sendMessage(user.id, notificationText);
            sentCount++;
          } catch (error) {
            console.error(
              `–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.id}`,
              error
            );
          }
        }

        bot.sendMessage(
          chatId,
          `–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${sentCount} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏–∑ ${users.length}`
        );
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:", error);
        bot.sendMessage(chatId, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è");
      }
    } else {
      bot.sendMessage(chatId, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã");
    }
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /delete
function handleDelete(bot) {
  bot.onText(/\/delete (.+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    const reminderId = match[1];

    try {
      const changes = await reminderModel.deleteReminder(reminderId, chatId);

      if (changes > 0) {
        bot.sendMessage(chatId, "‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!");
      } else {
        bot.sendMessage(
          chatId,
          "üîç –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –≤–∞–º"
        );
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:", error);
      bot.sendMessage(chatId, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è");
    }
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /delete_all
function handleDeleteAll(bot) {
  bot.onText(/\/delete_all/, async (msg) => {
    const chatId = msg.chat.id;

    try {
      const changes = await reminderModel.deleteAllUserReminders(chatId);
      bot.sendMessage(chatId, `üßπ –£–¥–∞–ª–µ–Ω–æ ${changes} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π!`);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:", error);
      bot.sendMessage(chatId, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π");
    }
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /list
function handleList(bot) {
  bot.onText(/\/list/, async (msg) => {
    const chatId = msg.chat.id;

    try {
      const reminders = await reminderModel.getUserReminders(chatId);

      if (reminders.length === 0) {
        bot.sendMessage(chatId, "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π");
        return;
      }

      let message = "üìã *–í–∞—à–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:*\n\n";

      reminders.forEach((reminder) => {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–Ω–∏
        let remainingDays = "";
        if (reminder.count_in_days === 99999) {
          remainingDays = "‚ôæÔ∏è (–±–µ—Å–∫–æ–Ω–µ—á–Ω–æ)";
        } else {
          remainingDays = reminder.count_in_days;
        }

        message += `üìù *–°–æ–æ–±—â–µ–Ω–∏–µ:* ${reminder.text}\n`;

        // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è, –µ—Å–ª–∏ –æ–Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π
        const times = reminder.time.split(",");
        if (times.length > 1) {
          message += `üïí *–í—Ä–µ–º—è:* ${times.join(", ")}\n`;
        } else {
          message += `üïí *–í—Ä–µ–º—è:* ${reminder.time}\n`;
        }

        message += `üÜî *ID:* \`${reminder.id}\`\n`;
        message += `‚è≥ *–û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π:* ${remainingDays}\n`;

        if (reminder.days && reminder.days !== "–ø–Ω,–≤—Ç,—Å—Ä,—á—Ç,–ø—Ç,—Å–±,–≤—Å") {
          message += `üìÖ *–î–Ω–∏ –Ω–µ–¥–µ–ª–∏:* ${reminder.days}\n`;
        }

        // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç–∏ –Ω–µ–¥–µ–ª—å
        let periodText = "";
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫ —á–∏—Å–ª—É, —Ç–∞–∫ –∫–∞–∫ –≤ –ë–î —Ö—Ä–∞–Ω–∏—Ç—Å—è –∫–∞–∫ INTEGER
        const everyWeekValue = parseInt(reminder.every_week);

        if (everyWeekValue === 0) {
          periodText = "–∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é";
        } else if (everyWeekValue === 1) {
          periodText = "—á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é";
        } else if (everyWeekValue >= 2) {
          periodText = `–∫–∞–∂–¥—ã–µ ${everyWeekValue + 1} –Ω–µ–¥–µ–ª–∏`;
        } else {
          // –ù–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –≤ –ë–î –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
          periodText = `${reminder.every_week}`;
        }

        message += `üîÑ *–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å:* ${periodText}\n`;

        message += "\n";
      });

      bot.sendMessage(chatId, message, { parse_mode: "Markdown" });
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:", error);
      bot.sendMessage(chatId, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π");
    }
  });
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ø—Ä–∞–≤–æ—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
function sendHelpMessage(bot, chatId) {
  const isAdmin = chatId.toString() === config.ADMIN_ID.toString();

  let helpText = `
üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.

‚úÖ –í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏:

1Ô∏è‚É£ –ù–∞–ø–∏—à–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –Ω–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —è–∑—ã–∫–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä:
   - "–ù–∞–ø–æ–º–Ω–∏ –∑–∞–≤—Ç—Ä–∞ –≤ 18:00 –≤—ã–≥—É–ª—è—Ç—å —Å–æ–±–∞–∫—É"
   - "–ù–∞–ø–æ–º–Ω–∏ –≤ 9 —É—Ç—Ä–∞ –ø—Ä–∏–Ω—è—Ç—å —Ç–∞–±–ª–µ—Ç–∫–∏"
   - "–ù–∞–ø–æ–º–Ω–∏ –º–Ω–µ –∫–∞–∂–¥—ã–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –≤ 10:00 –ø—Ä–æ –ø–ª–∞–Ω–µ—Ä–∫—É"
   - "–ß–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç –Ω–∞–ø–æ–º–Ω–∏ –ø—Ä–æ –≤—Å—Ç—Ä–µ—á—É"

2Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç:
text=–¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è&time=14:00&days=–ø–Ω,—á—Ç,–ø—Ç&countInDays=10&everyWeek=0
`;

  // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ /manual —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  if (isAdmin) {
    helpText += `
3Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø—Ä—è–º–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –±–µ–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞):
/manual text=–¢–µ–∫—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è&time=14:00&countInDays=999999&days=–≤—Ç&everyWeek=1
–∏–ª–∏
/manual text=–ú–∏—Ç–∏–Ω–≥ –≤ —Å–∏–Ω—Ç–µ–∑–µ&time=14:00&countInDays=999999&days=–≤—Ç&countInWeeks=1
`;
  }

  helpText += `
üìù –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞:
- text: –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
- time: –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú, –ø–æ –ú–°–ö (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ). –ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –Ω–∞–ø—Ä–∏–º–µ—Ä: 09:00,12:30,18:00
- days: –î–Ω–∏ –Ω–µ–¥–µ–ª–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ (–ø–Ω,–≤—Ç,—Å—Ä,—á—Ç,–ø—Ç,—Å–±,–≤—Å), –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ - –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
- countInDays: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–ø—Ä–∞–≤–æ–∫ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ), –¥–ª—è –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö –æ—Ç–ø—Ä–∞–≤–æ–∫ —É–∫–∞–∂–∏—Ç–µ 99999
- everyWeek –∏–ª–∏ countInWeeks: –ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –≤ –Ω–µ–¥–µ–ª—è—Ö:
  * 0 - –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é
  * 1 - —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é
  * 2 - –∫–∞–∂–¥—ã–µ 2 –Ω–µ–¥–µ–ª–∏ –∏ —Ç.–¥.

‚å®Ô∏è –ö–æ–º–∞–Ω–¥—ã:
üîç /help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
üìã /list - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–∞—à–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
üóëÔ∏è /delete ID - —É–¥–∞–ª–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ ID
üßπ /delete_all - —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –≤–∞—à–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
`;

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  if (isAdmin) {
    helpText += `
üëë –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:
üë• /users - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞
üì¢ /notification –¢–ï–ö–°–¢ - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±–æ—Ç–∞
üìù /manual –ü–ê–†–ê–ú–ï–¢–†–´ - —Å–æ–∑–¥–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤—Ä—É—á–Ω—É—é
`;
  }

  bot.sendMessage(chatId, helpText);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
function setupCommandHandlers(bot) {
  handleStart(bot);
  handleHelp(bot);
  handleManual(bot);
  handleUsers(bot);
  handleNotification(bot);
  handleDelete(bot);
  handleDeleteAll(bot);
  handleList(bot);
}

module.exports = {
  setupCommandHandlers,
  sendHelpMessage,
};
